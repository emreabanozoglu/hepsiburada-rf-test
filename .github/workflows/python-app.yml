# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions 

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  robot_test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 6
      matrix:
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8, 3.9]
    
    name: Run Robot Framework Tests
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
           python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Install SeleniumBase
        run: |
          python setup.py install
      - name: Lint with flake8
        run: |
         pip install flake8
         flake8 . --count --show-source --statistics --exclude=temp
      - name: Install Chrome and Firefox
        run: |
          sudo apt install google-chrome-stable
          sudo apt-get install firefox
      - name: Check the console scripts interface
        run: |
          seleniumbase
          sbase
      - name: Install chromedriver and geckodriver (Firefox Webdriver)
        run: |
          seleniumbase install chromedriver
          seleniumbase install geckodriver
      - name: Robot Framework
        uses: joonvena/robotframework-docker-action@v0.1
        env:
          BROWSER: chrome
          ROBOT_TESTS_DIR: ${{ github.workspace }}/Tests/HepsiBuradaTest.robot
          #ROBOT_REPORTS_DIR: ${{ github.workspace }}/reports


#name: Python application
#on:
#  
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [master]
#    
#jobs:
#  run_tests:
#    runs-on: ubuntu-latest
#    steps:
## checkout code from a repository
#      - uses: actions/checkout@v2
## create folder for test reports
#      - name: Create folder for reports
#        run: mkdir reports
## run Robot Framework tests inside Docker container 
#      - name: Run Robot Framework Tests
## container used here is ppodgorsek/robot-framework:latest
## see container documentation for usage: https://hub.docker.com/r/ppodgorsek/robot-framework/dockerfile
## it is required that GitHub repository contains folder "reports". Commit some file inside "reports" to create it
## place tests in folder tests or change docker run command accordingly
## configure -e ROBOT_OPTIONS according to yout tests, or remove it if no special configuration is needed
#        run: |
#          docker run -v ${PWD}/reports:/opt/robotframework/reports:Z -v ${{ github.workspace }}/:/opt/Tests/HepsiBuradaTest.robot:Z --user $(id -u):$(id -g) ppodgorsek/robot-framework:latest
## upload test reports as a zip file
#      - name: Upload reports
#        uses: actions/upload-artifact@v1
#        if: always()
#        with:
#          name: reports
## set path to Robot Framework results reports. Exclude dummy file that is needed because of ppodgorsek image privileges.
#          path: ${{ github.workspace }}/reports
## repository name is needed for posting test report in the next step
#      - name: Get Repository Name
#        run: |
#          export REPO="$(echo "${{ github.repository }}" | awk -F / '{print $2}' | sed -e "s/:refs//")"
#          echo "::set-env name=REPOSITORY_NAME::$REPO"
## when test are run for a commit, post results as a comment
## note: comment is not posted for tests triggered for pull requests, only for a main branch (master)
#      - name: Send test report as comment to commit
#        uses: joonvena/robotframework-reporter-action@v0.1
#        if: ${{ github.event_name == 'push' }}
#        env:
#          GH_ACCESS_TOKEN: ${{ github.TOKEN }}
#          REPO_OWNER: ${{ github.REPOSITORY_OwNER }}
#          COMMIT_SHA: ${{ github.SHA }}
#          REPOSITORY: ${{ env.REPOSITORY_NAME }}
#          REPORT_PATH: ${{ github.workspace }}/reports
#
